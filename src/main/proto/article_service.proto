syntax = "proto3";

package auction;

option java_package = "auction.managment";
option java_multiple_files = true;

import "article_info.proto";
import "search_info.proto";
import "registration_info.proto";
import "auction_info.proto";

message CreateArticleRequest { string user = 1; ArticleInfo info = 2; }

message CreateArticleResponse { bool upshot = 1; }

message SearchArticleRequest { SearchInfo info = 1; }

message SearchArticleResponse{ repeated ArticleInfo info = 1; }

message GetOwnedAuctionRequest{ string user = 1; }

message GetOwnedAuctionResponse{ repeated AuctionInfo info = 1; }

message RegisterForTheAuctionRequest{ RegistrationInfo info = 1; }

message RegisterForTheAuctionResponse{ bool upshot = 1; }

message GetUserActiveAuctionsRequest{ string user = 1; }

message GetUserActiveAuctionsResponse{ repeated ArticleInfo info = 1; }

message GetRegisteredAuctionsRequest{ string user = 1; }

message GetRegisteredAuctionsResponse{ repeated ArticleInfo info = 1; }

message GetClosedAuctionsRequest{ string user = 1; }

message GetClosedAuctionsResponse{ repeated AuctionInfo info = 1; }

message MakeOfferRequest{
  int32 auctionId = 1;
  double amount = 2;
  string user = 3;
}

message MakeOfferResponse{
  bool upshot = 1;
}

message BuyNowRequest{
  int32 auctionId = 1;
  string user = 2;
}

message BuyNowResponse{
  bool upshot = 1;
}

service ArticleService {
  rpc CreateArticle(CreateArticleRequest) returns (CreateArticleResponse) {};

  rpc SearchArticle(SearchArticleRequest) returns (SearchArticleResponse) {};

  rpc GetOwnedAuctions(GetOwnedAuctionRequest) returns (GetOwnedAuctionResponse) {};

  rpc RegisterForTheAuction(RegisterForTheAuctionRequest) returns (RegisterForTheAuctionResponse) {};

  rpc GetUserActiveAuctions(GetUserActiveAuctionsRequest) returns (GetUserActiveAuctionsResponse) {};

  rpc GetRegisteredAuctions(GetRegisteredAuctionsRequest) returns (GetRegisteredAuctionsResponse) {};

  rpc MakeOffer(MakeOfferRequest) returns (MakeOfferResponse) {};

  rpc GetClosedAuctions(GetClosedAuctionsRequest) returns (GetClosedAuctionsResponse) {};

  rpc BuyNow(BuyNowRequest) returns (BuyNowResponse) {};
}